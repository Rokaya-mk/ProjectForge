{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  // retreive departments data from api \n  getDepartments({\n    commit,\n    state\n  }) {\n    axios.get(\"departments\").then(response => {\n      state.filteredDepartments = [];\n      // store data in departments state\n      // commit('setDepartment', response.data)\n      commit('setDepartment', response.data);\n      // console.log(response.data.data)\n      var items = [];\n      response.data.data.forEach(element => {\n        items.push({\n          value: element.id,\n          label: element.name\n        });\n      });\n      commit('setFilteredDepartments', items);\n    }).catch(error => {\n      if (error.response && error.response.status === 422) {\n        // Validation error\n        console.log('yes');\n        commit('setErrors', error.response.data.errors);\n      } else {\n        console.error(\"Error fetching departments:\", error);\n      }\n    });\n  },\n  // Search departments\n  searchDepartment: (context, searchData) => {\n    setTimeout(function () {\n      axios.get(`departments/searchDepartment?${searchData.search_type}=${searchData.search_value}`).then(response => {\n        context.commit('setDepartment', response.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  },\n  // store department in db\n  storeDepartment({\n    commit\n  }, payload) {\n    axios.post(\"departments\", payload).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      if (error.response.status === 422) {\n        // Validation error\n        commit('setErrors', error.response.data.errors);\n      } else {\n        console.error(\"Error storing department:\", error);\n      }\n    });\n  },\n  // update a department\n  updateDepartment({\n    commit\n  }, payload) {\n    axios.put(`departments/${payload.id}`, payload).then(response => {\n      console.log(\"department updated successfully:\", response.data);\n      // context.dispatch('departments')\n      // this.closeModal();\n    }).catch(error => {\n      if (error.response.status === 422) {\n        // Validation error\n        commit('setErrors', error.response.data.errors);\n      } else {\n        console.error(\"Error updating department:\", error);\n      }\n    });\n  },\n  // delete department from db\n  deleteDepartment({\n    commit\n  }, payload) {\n    axios.delete(\"departments/\" + payload.id).then(response => {\n      console.log(\"department deleted successfully:\", response.data);\n    }).catch(error => {\n      console.error(\"Error deleting department:\", error);\n    });\n  }\n};","map":{"version":3,"names":["axios","getDepartments","commit","state","get","then","response","filteredDepartments","data","items","forEach","element","push","value","id","label","name","catch","error","status","console","log","errors","searchDepartment","context","searchData","setTimeout","search_type","search_value","err","storeDepartment","payload","post","updateDepartment","put","deleteDepartment","delete"],"sources":["D:/PROJETS/LARAVEL/project-forge-front/src/store/department/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  // retreive departments data from api \r\n  getDepartments({commit,state}) {\r\n    axios\r\n        .get(\"departments\")\r\n        .then((response) => {\r\n            state.filteredDepartments = [];\r\n            // store data in departments state\r\n            // commit('setDepartment', response.data)\r\n            commit('setDepartment', response.data)\r\n            // console.log(response.data.data)\r\n            var items = []\r\n            response.data.data.forEach(element => {\r\n                items.push({\r\n                    value: element.id,\r\n                    label: element.name\r\n                })\r\n            });\r\n            commit('setFilteredDepartments', items)\r\n            \r\n        })\r\n        .catch((error) => {\r\n            if (error.response && error.response.status === 422) { // Validation error\r\n                console.log('yes')\r\n                commit('setErrors', error.response.data.errors);\r\n            } else {\r\n                console.error(\"Error fetching departments:\", error);\r\n            }\r\n        });\r\n    },\r\n    // Search departments\r\n    searchDepartment: (context, searchData) => {\r\n        setTimeout(function() {\r\n            axios.get(`departments/searchDepartment?${searchData.search_type}=${searchData.search_value}`).then((response) => {\r\n                context.commit('setDepartment', response.data)\r\n            }).catch(err => {\r\n                console.log(err);\r\n            });\r\n        });\r\n    },\r\n    // store department in db\r\n    storeDepartment({commit}, payload) {\r\n        axios\r\n            .post(\"departments\", payload)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n            }).catch((error) => {\r\n                if (error.response.status === 422) { // Validation error\r\n                    commit('setErrors', error.response.data.errors);\r\n                } else {\r\n                    console.error(\"Error storing department:\", error);\r\n                }\r\n            });\r\n    },\r\n    // update a department\r\n    updateDepartment({commit}, payload) {\r\n        axios.put(`departments/${payload.id}`, payload)\r\n            .then((response) => {\r\n                console.log(\r\n                    \"department updated successfully:\",\r\n                    response.data\r\n                );\r\n                // context.dispatch('departments')\r\n                // this.closeModal();\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 422) { // Validation error\r\n                    commit('setErrors', error.response.data.errors);\r\n                } else {\r\n                    console.error(\"Error updating department:\", error);\r\n                }\r\n            });\r\n    },\r\n    // delete department from db\r\n    deleteDepartment({commit}, payload) {\r\n        axios\r\n            .delete(\"departments/\" + payload.id)\r\n            .then((response) => {\r\n                console.log(\r\n                    \"department deleted successfully:\",\r\n                    response.data\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error deleting department:\", error);\r\n            });\r\n\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}