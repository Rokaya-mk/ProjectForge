{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // retreive permissions data from api \n  getPermissions({\n    commit\n  }) {\n    axios.get(\"permissions\").then(response => {\n      // store data in permissions state\n      commit('setPermissions', response.data);\n    }).catch(error => {\n      if (error.response && error.response.status === 422) {\n        // Validation error\n        console.log('yes');\n        commit('setErrors', error.response.data.errors);\n      } else {\n        console.error(\"Error fetching permission:\", error);\n      }\n    });\n  },\n  // retreive specific permission data from api \n  showPermission({\n    commit\n  }, payload) {\n    axios.get(`permissions/${payload}`, payload).then(response => {\n      // store data in permission state\n      console.log(response.data.data);\n      commit('setOnePermission', response.data.data);\n    }).catch(error => {\n      console.error(\"Error fetching permission:\", error);\n    });\n  },\n  // store permission in db\n  storePermission({\n    commit\n  }, payload) {\n    axios.post(\"permissions\", payload).then(response => {\n      console.log(response);\n    }).catch(error => {\n      if (error.response.status === 422) {\n        // Validation error\n        commit('setErrors', error.response.data.errors);\n      } else {\n        console.error(\"Error storing permission:\", error);\n      }\n    });\n  },\n  // update a permission\n  updatePermission({\n    commit\n  }, payload) {\n    axios.put(`permissions/${payload.id}`, payload).then(response => {\n      console.log(\"permission updated successfully:\", response.data);\n    }).catch(error => {\n      if (error.response.status === 422) {\n        // Validation error\n        commit('setErrors', error.response.data.errors);\n      } else {\n        console.error(\"Error updating permission:\", error);\n      }\n    });\n  },\n  // delete permission from db\n  deletePermission({\n    commit\n  }, payload) {\n    axios.delete(\"permissions/\" + payload.id).then(response => {\n      console.log(\"permission deleted successfully:\", response.data);\n    }).catch(error => {\n      console.error(\"Error deleting permission:\", error);\n    });\n  }\n};","map":{"version":3,"names":["axios","getPermissions","commit","get","then","response","data","catch","error","status","console","log","errors","showPermission","payload","storePermission","post","updatePermission","put","id","deletePermission","delete"],"sources":["D:/PROJETS/LARAVEL/project-forge-front/src/store/permission/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  // retreive permissions data from api \r\n  getPermissions({commit}) {\r\n    axios\r\n        .get(\"permissions\")\r\n        .then((response) => {\r\n            // store data in permissions state\r\n            commit('setPermissions', response.data)\r\n        })\r\n        .catch((error) => {\r\n            if (error.response && error.response.status === 422) { // Validation error\r\n                console.log('yes')\r\n                commit('setErrors', error.response.data.errors);\r\n            } else {\r\n                console.error(\"Error fetching permission:\", error);\r\n            }\r\n        });\r\n    },// retreive specific permission data from api \r\n    showPermission({commit}, payload) {\r\n      axios\r\n          .get(`permissions/${payload}`, payload)\r\n          .then((response) => {\r\n              // store data in permission state\r\n              console.log(response.data.data)\r\n              commit('setOnePermission', response.data.data)\r\n          })\r\n          .catch((error) => {\r\n                console.error(\"Error fetching permission:\", error);\r\n          });\r\n      },\r\n    // store permission in db\r\n    storePermission({commit}, payload) {\r\n        \r\n        axios\r\n            .post(\"permissions\", payload)\r\n            .then((response) => {\r\n                console.log(response);\r\n            }).catch((error) => {\r\n                if (error.response.status === 422) { // Validation error\r\n                    commit('setErrors', error.response.data.errors);\r\n                } else {\r\n                    console.error(\"Error storing permission:\", error);\r\n                }\r\n            });\r\n    },\r\n    // update a permission\r\n    updatePermission({commit}, payload) {\r\n        axios.put(`permissions/${payload.id}`, payload)\r\n            .then((response) => {\r\n                console.log(\r\n                    \"permission updated successfully:\",\r\n                    response.data\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 422) { // Validation error\r\n                    commit('setErrors', error.response.data.errors);\r\n                } else {\r\n                    console.error(\"Error updating permission:\", error);\r\n                }\r\n            });\r\n    },\r\n    // delete permission from db\r\n    deletePermission({commit}, payload) {\r\n        axios\r\n            .delete(\"permissions/\" + payload.id)\r\n            .then((response) => {\r\n                console.log(\r\n                    \"permission deleted successfully:\",\r\n                    response.data\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error deleting permission:\", error);\r\n            });\r\n\r\n    }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}