{"ast":null,"code":"import FlashMessage from \"@/components/FlashMessage.vue\";\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  components: {\n    FlashMessage\n  },\n  data() {\n    return {};\n  },\n  computed: {\n    /* access to getter with mapgetter \r\n    userRoles : verify roles of this authenticated user \r\n    userPermissions : get the permissions of this user\r\n    */\n    ...mapGetters({\n      authenticated: 'auth/authenticated',\n      userRoles: 'user/userRoles',\n      userPermissions: 'user/userPermissions',\n      roles: 'role/roles'\n    })\n  },\n  mounted() {\n    if (this.authenticated) {\n      this.$store.dispatch('user/getUserRolesPermissions');\n      this.$store.dispatch(\"role/getRoles\");\n    }\n  },\n  methods: {\n    hasRole(role) {\n      return this.userRoles.has(role);\n    },\n    // get role list\n    getRoles() {\n      this.$store.dispatch(\"role/getRoles\");\n    },\n    // delete role\n    deleteRole(role) {\n      if (confirm(\"Are you sure you want to delete Role!\")) {\n        this.$store.dispatch(\"role/deleteRole\", role).then(response => {\n          this.getRoles();\n          this.closeModal();\n          this.$refs.flashMessage.showMessage('role was Deleted !!', 'alert-success');\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["FlashMessage","mapActions","mapGetters","components","data","computed","authenticated","userRoles","userPermissions","roles","mounted","$store","dispatch","methods","hasRole","role","has","getRoles","deleteRole","confirm","then","response","closeModal","$refs","flashMessage","showMessage"],"sources":["D:\\PROJETS\\LARAVEL\\project-forge-front\\src\\views\\managment\\roles\\index.vue"],"sourcesContent":["<template lang=\"\">\r\n        <FlashMessage ref=\"flashMessage\"></FlashMessage>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <h1>Roles</h1>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <router-link class=\"btn btn-success mt-2 float-right\" :to=\"{name: 'create-role'}\">\r\n                Create New Role\r\n            </router-link>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Display Name</th>\r\n                            <th>Description</th>\r\n                            <th v-if=\"userPermissions.has('roles-update','roles-delete')\">\r\n                                Actions\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(role, index) in roles.data\" :key=\"index\">\r\n                            <td>{{ index + 1 }}</td>\r\n                            <td>{{ role.name }}</td>\r\n                            <td>\r\n                                <!-- <button class=\"btn btn-success mx-1\"\r\n                                        v-if=\"userPermissions.has('roles-update')\" \r\n                                        @click=\"editRole(role)\">\r\n                                    <i class=\"fa fa-edit\"></i>\r\n                                </button> -->\r\n                                <button class=\"btn btn-danger mx-1\"\r\n                                        v-if=\"userPermissions.has('roles-delete')\"\r\n                                        @click=\"deleterole(role)\">\r\n                                        <i class=\"fa fa-trash\"></i>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport FlashMessage from \"@/components/FlashMessage.vue\";\r\nimport { mapActions, mapGetters } from 'vuex';\r\n\r\nexport default {\r\n    components:{\r\n        FlashMessage\r\n    },\r\n    data(){\r\n        return{\r\n\r\n        }\r\n    },\r\n    computed: {\r\n         /* access to getter with mapgetter \r\n        userRoles : verify roles of this authenticated user \r\n        userPermissions : get the permissions of this user\r\n        */\r\n        ...mapGetters({    \r\n            authenticated : 'auth/authenticated',  \r\n            userRoles : 'user/userRoles',\r\n            userPermissions : 'user/userPermissions',\r\n            roles : 'role/roles'\r\n        }),\r\n    },\r\n    mounted(){\r\n        if(this.authenticated){\r\n        this.$store.dispatch('user/getUserRolesPermissions');\r\n        this.$store.dispatch(\"role/getRoles\");\r\n      }\r\n    },\r\n    methods: {\r\n        hasRole(role) {\r\n            return this.userRoles.has(role);\r\n        },\r\n        // get role list\r\n        getRoles() {\r\n            this.$store.dispatch(\"role/getRoles\");\r\n        },\r\n        // delete role\r\n        deleteRole(role) {\r\n            if (confirm(\"Are you sure you want to delete Role!\")) {\r\n                this.$store\r\n                    .dispatch(\"role/deleteRole\", role)\r\n                    .then((response) => {\r\n                        this.getRoles();\r\n                        this.closeModal();\r\n                        this.$refs.flashMessage.showMessage('role was Deleted !!', 'alert-success');\r\n                    });\r\n            }\r\n        },   \r\n    },\r\n}\r\n</script>\r\n<style lang=\"\">\r\n    \r\n</style>"],"mappings":"AAmDA,OAAOA,YAAW,MAAO,+BAA+B;AACxD,SAASC,UAAU,EAAEC,UAAS,QAAS,MAAM;AAE7C,eAAe;EACXC,UAAU,EAAC;IACPH;EACJ,CAAC;EACDI,IAAIA,CAAA,EAAE;IACF,OAAM,CAEN;EACJ,CAAC;EACDC,QAAQ,EAAE;IACL;;;;IAID,GAAGH,UAAU,CAAC;MACVI,aAAY,EAAI,oBAAoB;MACpCC,SAAQ,EAAI,gBAAgB;MAC5BC,eAAc,EAAI,sBAAsB;MACxCC,KAAI,EAAI;IACZ,CAAC;EACL,CAAC;EACDC,OAAOA,CAAA,EAAE;IACL,IAAG,IAAI,CAACJ,aAAa,EAAC;MACtB,IAAI,CAACK,MAAM,CAACC,QAAQ,CAAC,8BAA8B,CAAC;MACpD,IAAI,CAACD,MAAM,CAACC,QAAQ,CAAC,eAAe,CAAC;IACvC;EACF,CAAC;EACDC,OAAO,EAAE;IACLC,OAAOA,CAACC,IAAI,EAAE;MACV,OAAO,IAAI,CAACR,SAAS,CAACS,GAAG,CAACD,IAAI,CAAC;IACnC,CAAC;IACD;IACAE,QAAQA,CAAA,EAAG;MACP,IAAI,CAACN,MAAM,CAACC,QAAQ,CAAC,eAAe,CAAC;IACzC,CAAC;IACD;IACAM,UAAUA,CAACH,IAAI,EAAE;MACb,IAAII,OAAO,CAAC,uCAAuC,CAAC,EAAE;QAClD,IAAI,CAACR,MAAK,CACLC,QAAQ,CAAC,iBAAiB,EAAEG,IAAI,EAChCK,IAAI,CAAEC,QAAQ,IAAK;UAChB,IAAI,CAACJ,QAAQ,CAAC,CAAC;UACf,IAAI,CAACK,UAAU,CAAC,CAAC;UACjB,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,WAAW,CAAC,qBAAqB,EAAE,eAAe,CAAC;QAC/E,CAAC,CAAC;MACV;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}