{"ast":null,"code":"import { Modal } from \"bootstrap\";\nimport { mapGetters, mapActions } from \"vuex\";\nimport FlashMessage from \"@/components/FlashMessage.vue\";\nexport default {\n  components: {\n    FlashMessage\n  },\n  data() {\n    return {\n      editMode: false,\n      modal: \"\",\n      departmentData: {\n        id: \"\",\n        name: \"\"\n      },\n      // object error\n      departmentErrors: {}\n    };\n  },\n  mounted() {\n    this.modal = new Modal(document.getElementById(\"exampleModal\"));\n    this.getDepartments();\n    this.$store.dispatch('user/getUserRolesPermissions');\n  },\n  computed: {\n    /* access to getter with mapgetter \r\n    departments : to get departments list\r\n    userRoles : verify roles of this authenticated user \r\n    userPermissions : get the permissions of this user\r\n    errors :  get api errors\r\n    */\n    ...mapGetters({\n      departments: 'department/departments',\n      userRoles: 'user/userRoles',\n      userPermissions: 'user/userPermissions',\n      errors: \"department/errors\"\n    })\n  },\n  methods: {\n    ...mapActions({\n      setFlashMessage: 'flash/setFlashMessage'\n    }),\n    openModal() {\n      this.editMode = false;\n      this.departmentData.name = \"\";\n      this.modal.show();\n    },\n    closeModal() {\n      this.modal.hide();\n    },\n    // save Department method\n    saveDepartment() {\n      if (this.validateData()) {\n        this.$store.dispatch(\"department/storeDepartment\", this.departmentData).then(response => {\n          this.getDepartments();\n          this.closeModal();\n          // this.$refs.flashMessage.showMessage('department was created !!', 'alert-success');\n          this.setFlashMessage({\n            message: 'departmentsss was created !!',\n            type: 'alert-success'\n          });\n        });\n      }\n    },\n    // get departments list\n    getDepartments() {\n      this.$store.dispatch(\"department/getDepartments\");\n    },\n    // show edit department modal\n    editDepartment(department) {\n      this.editMode = true;\n      this.departmentData.id = department.id;\n      this.departmentData.name = department.name;\n      this.modal.show();\n    },\n    // update department\n    updateDepartment() {\n      if (this.validateData()) {\n        this.$store.dispatch(\"department/updateDepartment\", this.departmentData).then(response => {\n          this.getDepartments();\n          this.closeModal();\n          // this.$refs.flashMessage.showMessage('Department was Updated !!', 'alert-success');\n          this.setFlashMessage({\n            message: 'Department was Updated !!',\n            type: 'alert-success'\n          });\n        });\n      }\n    },\n    // delete Department\n    deleteDepartment(department) {\n      if (confirm(\"Are you sure you want to delete department!\")) {\n        this.$store.dispatch(\"department/deleteDepartment\", department).then(response => {\n          this.getDepartments();\n          this.closeModal();\n          this.setFlashMessage({\n            message: 'Departmentssss was Deleted !!',\n            type: 'alert-success'\n          });\n        });\n      }\n    },\n    // validate Name\n    validateName() {\n      if (!this.departmentData.name) {\n        this.departmentErrors.name = \"Name is required\";\n      } else if (this.departmentData.name.length < 5) {\n        this.departmentErrors.name = \"Name length must be at least 5\";\n      } else {\n        delete this.departmentErrors.name;\n      }\n    },\n    // validate data methode\n    validateData() {\n      this.validateName();\n      return Object.keys(this.departmentErrors).length === 0;\n    }\n  }\n};","map":{"version":3,"names":["Modal","mapGetters","mapActions","FlashMessage","components","data","editMode","modal","departmentData","id","name","departmentErrors","mounted","document","getElementById","getDepartments","$store","dispatch","computed","departments","userRoles","userPermissions","errors","methods","setFlashMessage","openModal","show","closeModal","hide","saveDepartment","validateData","then","response","message","type","editDepartment","department","updateDepartment","deleteDepartment","confirm","validateName","length","Object","keys"],"sources":["D:\\PROJETS\\LARAVEL\\project-forge-front\\src\\views\\managment\\departments\\index.vue"],"sourcesContent":["<template>\r\n    <!-- <div v-if=\"error\" class=\"error\">{{ error }}</div> -->\r\n    <FlashMessage ref=\"flashMessage\"></FlashMessage>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header d-flex justify-content-between bg-dark\">\r\n                    <h5 class=\"text-light\">Departments List</h5>\r\n                    <button class=\"btn btn-success\"\r\n                            v-if=\"userPermissions.has('departments-create')\"\r\n                            @click=\"openModal\" >\r\n                            New Department\r\n                    </button>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\">\r\n                        <table class=\"table table-hover text-center\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Name</th>\r\n                                    <th>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"(department, index) in departments.data\" :key=\"index\">\r\n                                    <td>{{ index + 1 }}</td>\r\n                                    <td>{{ department.name }}</td>\r\n                                    <td>\r\n                                        <button class=\"btn btn-success mx-1\"\r\n                                                v-if=\"userPermissions.has('departments-update')\" \r\n                                                @click=\"editDepartment(department)\">\r\n                                            <i class=\"fa fa-edit\"></i>\r\n                                        </button>\r\n                                        <button class=\"btn btn-danger mx-1\"\r\n                                                v-if=\"userPermissions.has('departments-delete')\"\r\n                                                @click=\"deleteDepartment(department)\">\r\n                                                <i class=\"fa fa-trash\"></i>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <!-- Modal -->\r\n                    <div class=\"modal fade show\"\r\n                        id=\"exampleModal\"\r\n                        tabindex=\"-1\"\r\n                        aria-labelledby=\"exampleModalLabel\"\r\n                        aria-hidden=\"true\">\r\n                        <div class=\"modal-dialog modal-dialog-centered\">\r\n                            <div class=\"modal-content\">\r\n                                <div class=\"modal-header\">\r\n                                    <h5 class=\"modal-title\"\r\n                                        id=\"exampleModalLabel\">\r\n                                        {{ !editMode ? \"Create Department\" : \"Update Department\" }}\r\n                                    </h5>\r\n                                    <button @click=\"closeModal\"\r\n                                            type=\"button\"\r\n                                            class=\"btn-close\"\r\n                                            aria-label=\"Close\">\r\n                                    </button>\r\n                                </div>\r\n                                <div class=\"modal-body\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-md-6 mx-auto\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"name\">Name</label>\r\n                                                <input @blur=\"validateName\"\r\n                                                        type=\"text\"\r\n                                                        class=\"form-control\"\r\n                                                        v-model=\"departmentData.name\"/>\r\n                                                <span v-if=\"departmentErrors.name\"\r\n                                                      class=\"text-danger\">\r\n                                                      {{departmentErrors.name}}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"modal-footer\">\r\n                                    <button\r\n                                        @click=\"closeModal\"\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-secondary\">\r\n                                        Close\r\n                                    </button>\r\n                                    <button\r\n                                        @click=\" !editMode ? saveDepartment() : updateDepartment()\"\r\n                                        type=\"button\"\r\n                                        class=\"btn\"\r\n                                        :class=\"{\r\n                                            'btn-success': !editMode,\r\n                                            'btn-warning': editMode,\r\n                                        }\">\r\n                                        {{ !editMode ? \"Save changes\" : \"Update \" }}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { Modal } from \"bootstrap\";\r\nimport { mapGetters, mapActions } from \"vuex\";\r\nimport FlashMessage from \"@/components/FlashMessage.vue\";\r\nexport default {\r\n    components:{\r\n        FlashMessage\r\n    },\r\n    data() {\r\n        return {\r\n            editMode: false,\r\n            modal: \"\",\r\n            departmentData: {\r\n                id: \"\",\r\n                name: \"\", \r\n            },\r\n            // object error\r\n            departmentErrors: {},\r\n        };\r\n    },\r\n    mounted() {\r\n\r\n        this.modal = new Modal(document.getElementById(\"exampleModal\"));\r\n        this.getDepartments();\r\n        \r\n        this.$store.dispatch('user/getUserRolesPermissions');\r\n        \r\n    },\r\n    computed: {\r\n        /* access to getter with mapgetter \r\n        departments : to get departments list\r\n        userRoles : verify roles of this authenticated user \r\n        userPermissions : get the permissions of this user\r\n        errors :  get api errors\r\n        */\r\n        ...mapGetters({\r\n            departments :'department/departments',\r\n            \r\n            userRoles : 'user/userRoles',\r\n            userPermissions : 'user/userPermissions',\r\n            errors :\"department/errors\"\r\n        }),\r\n        \r\n    },\r\n    methods: {\r\n        ...mapActions({\r\n            setFlashMessage : 'flash/setFlashMessage',\r\n        }),\r\n        openModal() {\r\n            this.editMode = false;\r\n            this.departmentData.name = \"\";\r\n            this.modal.show();\r\n        },\r\n\r\n        closeModal() {\r\n            this.modal.hide();\r\n        },\r\n        // save Department method\r\n        saveDepartment() {\r\n            if (this.validateData()) {\r\n                this.$store\r\n                    .dispatch(\"department/storeDepartment\", this.departmentData)\r\n                    .then((response) => {\r\n                        this.getDepartments();\r\n                        this.closeModal();\r\n                        // this.$refs.flashMessage.showMessage('department was created !!', 'alert-success');\r\n                        this.setFlashMessage({ message: 'departmentsss was created !!', type: 'alert-success' });\r\n                    })\r\n            }\r\n        },\r\n        // get departments list\r\n        getDepartments() {\r\n            this.$store.dispatch(\"department/getDepartments\");\r\n        },\r\n        // show edit department modal\r\n        editDepartment(department) {\r\n            this.editMode = true;\r\n            this.departmentData.id = department.id;\r\n            this.departmentData.name = department.name;\r\n            this.modal.show();\r\n        },\r\n        // update department\r\n        updateDepartment() {\r\n            if (this.validateData()) {\r\n                this.$store\r\n                    .dispatch(\"department/updateDepartment\", this.departmentData)\r\n                    .then((response) => {\r\n                        this.getDepartments();\r\n                        this.closeModal();\r\n                        // this.$refs.flashMessage.showMessage('Department was Updated !!', 'alert-success');\r\n                        this.setFlashMessage({ message: 'Department was Updated !!', type: 'alert-success' });\r\n                    });\r\n            }\r\n        },\r\n        // delete Department\r\n        deleteDepartment(department) {\r\n            if (confirm(\"Are you sure you want to delete department!\")) {\r\n                this.$store\r\n                    .dispatch(\"department/deleteDepartment\", department)\r\n                    .then((response) => {\r\n                        this.getDepartments();\r\n                        this.closeModal();\r\n                        this.setFlashMessage({ message: 'Departmentssss was Deleted !!', type: 'alert-success' });\r\n                    });\r\n            }\r\n        },\r\n        // validate Name\r\n        validateName() {\r\n            if (!this.departmentData.name) {\r\n                this.departmentErrors.name = \"Name is required\";\r\n            }else if(this.departmentData.name.length < 5){\r\n                this.departmentErrors.name = \"Name length must be at least 5\" ;\r\n            } else {\r\n                delete this.departmentErrors.name;\r\n            }\r\n        },\r\n       \r\n        // validate data methode\r\n        validateData() {\r\n            this.validateName();\r\n            return Object.keys(this.departmentErrors).length === 0;\r\n        },\r\n    },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}