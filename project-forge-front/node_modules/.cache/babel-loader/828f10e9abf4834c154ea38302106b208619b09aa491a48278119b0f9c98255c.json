{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  // retreive roles data from api \n  getRoles({\n    commit,\n    state\n  }) {\n    axios.get(\"roles\").then(response => {\n      // store data in roles state\n      console.log(response);\n      commit('setRole', response.data);\n    }).catch(error => {\n      if (error.response && error.response.status === 422) {\n        // Validation error\n        console.log('yes');\n        commit('setErrors', error.response.data.errors);\n      } else {\n        console.error(\"Error fetching roles:\", error);\n      }\n    });\n  },\n  // store role in db\n  storeRole({\n    commit\n  }, payload) {\n    axios.post(\"roles\", payload).then(response => {\n      console.log(response.data);\n    }).catch(error => {\n      if (error.response.status === 422) {\n        // Validation error\n        commit('setErrors', error.response.data.errors);\n      } else {\n        console.error(\"Error storing role:\", error);\n      }\n    });\n  },\n  // update a role\n  updateRole({\n    commit\n  }, payload) {\n    axios.put(`roles/${payload.id}`, payload).then(response => {\n      console.log(\"role updated successfully:\", response.data);\n    }).catch(error => {\n      if (error.response.status === 422) {\n        // Validation error\n        commit('setErrors', error.response.data.errors);\n      } else {\n        console.error(\"Error updating role:\", error);\n      }\n    });\n  },\n  // delete role from db\n  deleteRole({\n    commit\n  }, payload) {\n    axios.delete(\"roles/\" + payload.id).then(response => {\n      console.log(\"role deleted successfully:\", response.data);\n    }).catch(error => {\n      console.error(\"Error deleting role:\", error);\n    });\n  }\n};","map":{"version":3,"names":["axios","getRoles","commit","state","get","then","response","console","log","data","catch","error","status","errors","storeRole","payload","post","updateRole","put","id","deleteRole","delete"],"sources":["D:/PROJETS/LARAVEL/project-forge-front/src/store/role/actions.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default {\r\n  // retreive roles data from api \r\n  getRoles({commit,state}) {\r\n    axios\r\n        .get(\"roles\")\r\n        .then((response) => {\r\n            // store data in roles state\r\n            console.log(response)\r\n            commit('setRole', response.data)\r\n        })\r\n        .catch((error) => {\r\n            if (error.response && error.response.status === 422) { // Validation error\r\n                console.log('yes')\r\n                commit('setErrors', error.response.data.errors);\r\n            } else {\r\n                console.error(\"Error fetching roles:\", error);\r\n            }\r\n        });\r\n    },\r\n    // store role in db\r\n    storeRole({commit}, payload) {\r\n        axios\r\n            .post(\"roles\", payload)\r\n            .then((response) => {\r\n                console.log(response.data);\r\n            }).catch((error) => {\r\n                if (error.response.status === 422) { // Validation error\r\n                    commit('setErrors', error.response.data.errors);\r\n                } else {\r\n                    console.error(\"Error storing role:\", error);\r\n                }\r\n            });\r\n    },\r\n    // update a role\r\n    updateRole({commit}, payload) {\r\n        axios.put(`roles/${payload.id}`, payload)\r\n            .then((response) => {\r\n                console.log(\r\n                    \"role updated successfully:\",\r\n                    response.data\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 422) { // Validation error\r\n                    commit('setErrors', error.response.data.errors);\r\n                } else {\r\n                    console.error(\"Error updating role:\", error);\r\n                }\r\n            });\r\n    },\r\n    // delete role from db\r\n    deleteRole({commit}, payload) {\r\n        axios\r\n            .delete(\"roles/\" + payload.id)\r\n            .then((response) => {\r\n                console.log(\r\n                    \"role deleted successfully:\",\r\n                    response.data\r\n                );\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error deleting role:\", error);\r\n            });\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe;EACb;EACAC,QAAQA,CAAC;IAACC,MAAM;IAACC;EAAK,CAAC,EAAE;IACvBH,KAAK,CACAI,GAAG,CAAC,OAAO,CAAC,CACZC,IAAI,CAAEC,QAAQ,IAAK;MAChB;MACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBJ,MAAM,CAAC,SAAS,EAAEI,QAAQ,CAACG,IAAI,CAAC;IACpC,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACd,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAAE;QACnDL,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;QAClBN,MAAM,CAAC,WAAW,EAAES,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACI,MAAM,CAAC;MACnD,CAAC,MAAM;QACHN,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC,CAAC;EACN,CAAC;EACD;EACAG,SAASA,CAAC;IAACZ;EAAM,CAAC,EAAEa,OAAO,EAAE;IACzBf,KAAK,CACAgB,IAAI,CAAC,OAAO,EAAED,OAAO,CAAC,CACtBV,IAAI,CAAEC,QAAQ,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;IAC9B,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;MAChB,IAAIA,KAAK,CAACL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAAE;QACjCV,MAAM,CAAC,WAAW,EAAES,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACI,MAAM,CAAC;MACnD,CAAC,MAAM;QACHN,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC/C;IACJ,CAAC,CAAC;EACV,CAAC;EACD;EACAM,UAAUA,CAAC;IAACf;EAAM,CAAC,EAAEa,OAAO,EAAE;IAC1Bf,KAAK,CAACkB,GAAG,CAAE,SAAQH,OAAO,CAACI,EAAG,EAAC,EAAEJ,OAAO,CAAC,CACpCV,IAAI,CAAEC,QAAQ,IAAK;MAChBC,OAAO,CAACC,GAAG,CACP,4BAA4B,EAC5BF,QAAQ,CAACG,IACb,CAAC;IACL,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACd,IAAIA,KAAK,CAACL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QAAE;QACjCV,MAAM,CAAC,WAAW,EAAES,KAAK,CAACL,QAAQ,CAACG,IAAI,CAACI,MAAM,CAAC;MACnD,CAAC,MAAM;QACHN,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAChD;IACJ,CAAC,CAAC;EACV,CAAC;EACD;EACAS,UAAUA,CAAC;IAAClB;EAAM,CAAC,EAAEa,OAAO,EAAE;IAC1Bf,KAAK,CACAqB,MAAM,CAAC,QAAQ,GAAGN,OAAO,CAACI,EAAE,CAAC,CAC7Bd,IAAI,CAAEC,QAAQ,IAAK;MAChBC,OAAO,CAACC,GAAG,CACP,4BAA4B,EAC5BF,QAAQ,CAACG,IACb,CAAC;IACL,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD,CAAC,CAAC;EAEV;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}